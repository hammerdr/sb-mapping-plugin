var T=Object.defineProperty;var U=(e,r)=>{for(var o in r)T(e,o,{get:r[o],enumerable:!0})};function M(e){let r=atob(e),o=r.length,n=new Uint8Array(o);for(let s=0;s<o;s++)n[s]=r.charCodeAt(s);return n}function h(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let r="",o=e.byteLength;for(let n=0;n<o;n++)r+=String.fromCharCode(e[n]);return btoa(r)}var f=e=>{throw new Error("Not initialized yet")},w=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var v=new Map,b=0;w&&(globalThis.syscall=async(e,...r)=>await new Promise((o,n)=>{b++,v.set(b,{resolve:o,reject:n}),f({type:"sys",id:b,name:e,args:r})}));function F(e,r,o){w&&(f=o,self.addEventListener("message",n=>{(async()=>{let s=n.data;switch(s.type){case"inv":{let d=e[s.name];if(!d)throw new Error(`Function not loaded: ${s.name}`);try{let u=await Promise.resolve(d(...s.args||[]));f({type:"invr",id:s.id,result:u})}catch(u){console.error("An exception was thrown as a result of invoking function",s.name,"error:",u.message),f({type:"invr",id:s.id,error:u.message})}}break;case"sysr":{let d=s.id,u=v.get(d);if(!u)throw Error("Invalid request id");v.delete(d),s.error?u.reject(new Error(s.error)):u.resolve(s.result)}break}})().catch(console.error)}),f({type:"manifest",manifest:r}))}async function R(e,r){if(typeof e!="string"){let o=new Uint8Array(await e.arrayBuffer()),n=o.length>0?h(o):void 0;r={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:n},e=e.url}return syscall("sandboxFetch.fetch",e,r)}globalThis.nativeFetch=globalThis.fetch;function O(){globalThis.fetch=async function(e,r){let o=r&&r.body?h(new Uint8Array(await new Response(r.body).arrayBuffer())):void 0,n=await R(e,r&&{method:r.method,headers:r.headers,base64Body:o});return new Response(n.base64Body?M(n.base64Body):null,{status:n.status,headers:n.headers})}}w&&O();var x={};U(x,{alert:()=>he,configureVimMode:()=>Oe,confirm:()=>Pe,copyToClipboard:()=>Ee,deleteLine:()=>Le,dispatch:()=>ye,downloadFile:()=>ne,filterBox:()=>ae,flashNotification:()=>se,fold:()=>we,foldAll:()=>Fe,getCurrentEditor:()=>B,getCurrentPage:()=>q,getCurrentPageMeta:()=>K,getCurrentPath:()=>$,getCursor:()=>Q,getRecentlyOpenedPages:()=>j,getSelection:()=>V,getText:()=>W,getUiOption:()=>be,goHistory:()=>oe,hidePanel:()=>ue,insertAtCursor:()=>ge,insertAtPos:()=>le,invokeCommand:()=>_,moveCursor:()=>pe,moveCursorToLine:()=>fe,moveLineDown:()=>Ue,moveLineUp:()=>Te,navigate:()=>z,newWindow:()=>re,openCommandPalette:()=>G,openPageNavigator:()=>Y,openSearchPanel:()=>Se,openUrl:()=>te,prompt:()=>xe,rebuildEditorState:()=>Z,redo:()=>ke,reloadConfigAndCommands:()=>ee,reloadPage:()=>X,reloadUI:()=>J,replaceRange:()=>me,save:()=>H,sendMessage:()=>qe,setSelection:()=>N,setText:()=>I,setUiOption:()=>ve,showPanel:()=>ce,showProgress:()=>de,toggleFold:()=>Me,undo:()=>Ae,unfold:()=>Ce,unfoldAll:()=>De,uploadFile:()=>ie,vimEx:()=>Re});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});function t(e,...r){return globalThis.syscall(e,...r)}function q(){return t("editor.getCurrentPage")}function K(){return t("editor.getCurrentPageMeta")}function $(e=!1){return t("editor.getCurrentPath",e)}function j(){return t("editor.getRecentlyOpenedPages")}function B(){return t("editor.getCurrentEditor")}function W(){return t("editor.getText")}function I(e,r=!1){return t("editor.setText",e,r)}function Q(){return t("editor.getCursor")}function V(){return t("editor.getSelection")}function N(e,r){return t("editor.setSelection",e,r)}function _(e,r){return t("editor.invokeCommand",e,r)}function H(){return t("editor.save")}function z(e,r=!1,o=!1){return t("editor.navigate",e,r,o)}function Y(e="page"){return t("editor.openPageNavigator",e)}function G(){return t("editor.openCommandPalette")}function X(){return t("editor.reloadPage")}function J(){return t("editor.reloadUI")}function Z(){return t("editor.rebuildEditorState")}function ee(){return t("editor.reloadConfigAndCommands")}function te(e,r=!1){return t("editor.openUrl",e,r)}function re(){return t("editor.newWindow")}function oe(e){return t("editor.goHistory",e)}function ne(e,r){return t("editor.downloadFile",e,r)}function ie(e,r){return t("editor.uploadFile",e,r)}function se(e,r="info"){return t("editor.flashNotification",e,r)}function ae(e,r,o="",n=""){return t("editor.filterBox",e,r,o,n)}function ce(e,r,o,n=""){return t("editor.showPanel",e,r,o,n)}function ue(e){return t("editor.hidePanel",e)}function de(e,r){return t("editor.showProgress",e,r)}function le(e,r){return t("editor.insertAtPos",e,r)}function me(e,r,o){return t("editor.replaceRange",e,r,o)}function pe(e,r=!1){return t("editor.moveCursor",e,r)}function fe(e,r=1,o=!1){return t("editor.moveCursorToLine",e,r,o)}function ge(e,r=!1,o=!1){return t("editor.insertAtCursor",e,r,o)}function ye(e){return t("editor.dispatch",e)}function xe(e,r=""){return t("editor.prompt",e,r)}function Pe(e){return t("editor.confirm",e)}function he(e){return t("editor.alert",e)}function be(e){return t("editor.getUiOption",e)}function ve(e,r){return t("editor.setUiOption",e,r)}function we(){return t("editor.fold")}function Ce(){return t("editor.unfold")}function Me(){return t("editor.toggleFold")}function Fe(){return t("editor.foldAll")}function De(){return t("editor.unfoldAll")}function Ae(){return t("editor.undo")}function ke(){return t("editor.redo")}function Se(){return t("editor.openSearchPanel")}function Ee(e){return t("editor.copyToClipboard",e)}function Le(){return t("editor.deleteLine")}function Te(){return t("editor.moveLineUp")}function Ue(){return t("editor.moveLineDown")}function Re(e){return t("editor.vimEx",e)}function Oe(){return t("editor.configureVimMode")}function qe(e,r){return t("editor.sendMessage",e,r)}async function D(){await x.flashNotification("D&D Mapping Plugin is working!")}async function A(e){console.log("D&D Map widget called!"),console.log("bodyText:",e);let r=e.trim().split(`
`).map(i=>i.trim()).filter(i=>i&&!i.startsWith("%%")),o=[],n=[];for(let i of r){if(i.startsWith("graph ")||i.startsWith("flowchart "))continue;let a=i.match(/(\w+)(\[.*?\])?(\s*:::(\w+))?(\s*-->?\s*|\s*---?\s*)(\w+)(\[.*?\])?(\s*:::(\w+))?(\s*:\s*(.+))?/);if(a){let[,c,y,,P,et,p,C,,E,,L]=a;if(!o.find(l=>l.id===c)){let l=y&&y.match(/[\[\(\{](.*)[\]\)\}]/)?.[1]||c;o.push({id:c,label:l,type:P})}if(!o.find(l=>l.id===p)){let l=C&&C.match(/[\[\(\{](.*)[\]\)\}]/)?.[1]||p;o.push({id:p,label:l,type:E})}n.push({from:c,to:p,label:L?.trim()})}}let s=400,d=300,u=150,g=new Map;o.forEach((i,a)=>{let c=a/o.length*2*Math.PI;g.set(i.id,{x:s+Math.cos(c)*u,y:d+Math.sin(c)*u})});let m='<svg viewBox="0 0 800 600" style="width: 100%; height: 400px; border: 1px solid #ccc;">';return n.forEach(i=>{let a=g.get(i.from),c=g.get(i.to);if(a&&c&&(m+=`<line x1="${a.x}" y1="${a.y}" x2="${c.x}" y2="${c.y}" stroke="#666" stroke-width="2"/>`,i.label)){let y=(a.x+c.x)/2,P=(a.y+c.y)/2;m+=`<text x="${y}" y="${P}" text-anchor="middle" font-size="12" fill="#333">${i.label}</text>`}}),o.forEach(i=>{let a=g.get(i.id);if(a){let c=Ze(i.type);m+=`<circle cx="${a.x}" cy="${a.y}" r="25" fill="${c}" stroke="#333" stroke-width="2" style="cursor: pointer;" onclick="setCurrentLocation('${i.id}')"/>`,m+=`<text x="${a.x}" y="${a.y}" text-anchor="middle" dominant-baseline="middle" font-size="14" fill="#333" style="pointer-events: none;">${i.label}</text>`}}),m+="</svg>",{html:`
      <div style="border: 1px solid #ccc; border-radius: 8px; padding: 15px; margin: 10px 0;">
        <h3 style="margin: 0 0 15px 0;">\u{1F5FA}\uFE0F D&D Interactive Map</h3>
        ${m}
        <div id="location-info" style="margin-top: 15px; padding: 10px; background: #f5f5f5; border-radius: 4px;">
          <strong>Current Location:</strong> <span id="current-location">Click a location above</span>
        </div>
      </div>
    `,script:`
      let currentLocation = null;

      function setCurrentLocation(locationId) {
        currentLocation = locationId;
        document.getElementById('current-location').textContent = locationId;

        // Update visual highlighting
        const circles = document.querySelectorAll('circle');
        circles.forEach(circle => {
          if (circle.getAttribute('onclick').includes(locationId)) {
            circle.setAttribute('stroke', '#e74c3c');
            circle.setAttribute('stroke-width', '4');
          } else {
            circle.setAttribute('stroke', '#333');
            circle.setAttribute('stroke-width', '2');
          }
        });
      }

      function getNodeColor(type) {
        const colors = {
          'tavern': '#ffd700',
          'dungeon': '#8b0000',
          'city': '#4682b4',
          'castle': '#9370db',
          'forest': '#228b22',
          'shop': '#ff8c00',
          'important': '#e74c3c'
        };
        return colors[type] || '#f8f9fa';
      }

      console.log("D&D Map widget loaded successfully!");
    `}}function Ze(e){return{tavern:"#ffd700",dungeon:"#8b0000",city:"#4682b4",castle:"#9370db",forest:"#228b22",shop:"#ff8c00",important:"#e74c3c"}[e||""]||"#f8f9fa"}var k={testCommand:D,dndMapWidget:A},S={name:"dnd-mapping",functions:{testCommand:{path:"dnd-mapping.ts:testCommand",command:{name:"Test D&D Plugin"}},dndMapWidget:{path:"dnd-mapping.ts:widget",codeWidget:"dndmap"}},assets:{}},Ut={manifest:S,functionMapping:k};F(k,S,self.postMessage);export{Ut as plug};
